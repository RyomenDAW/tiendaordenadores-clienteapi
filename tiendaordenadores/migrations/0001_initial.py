# Generated by Django 5.1.5 on 2025-02-04 08:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscoDuroNvme',
            fields=[
                ('id_nvme', models.AutoField(primary_key=True, serialize=False)),
                ('amperaje', models.TextField(max_length=20)),
                ('capacidad', models.CharField(max_length=20)),
                ('peso', models.CharField(max_length=10)),
                ('tiempomediofallos', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='DiscoDuroSsd',
            fields=[
                ('id_ssd', models.AutoField(primary_key=True, serialize=False)),
                ('amperaje', models.TextField(max_length=20)),
                ('capacidad', models.CharField(max_length=20)),
                ('peso', models.CharField(max_length=10)),
                ('tiempomediofallos', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Disipador',
            fields=[
                ('id_disipador', models.AutoField(primary_key=True, serialize=False)),
                ('vidautil', models.CharField(max_length=20)),
                ('socket', models.TextField(choices=[('Ryzen', 'Ryzen'), ('Intel', 'Intel')], max_length=20)),
                ('voltaje', models.CharField(max_length=10)),
                ('dimensiones', models.CharField(max_length=10)),
                ('fechacreacion', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='DiscoDuroHdd',
            fields=[
                ('id_hdd', models.AutoField(primary_key=True, serialize=False)),
                ('rpm', models.TextField(max_length=20)),
                ('capacidad', models.CharField(max_length=20)),
                ('peso', models.CharField(max_length=10)),
                ('tiempomediofallos', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pulgadas', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FuenteAlimentacion',
            fields=[
                ('id_fuente', models.AutoField(primary_key=True, serialize=False)),
                ('urlcompra', models.URLField(max_length=100)),
                ('vatios', models.PositiveIntegerField()),
                ('amperaje', models.FloatField(max_length=20)),
                ('conectoresdisponibles', models.TextField(max_length=100)),
                ('calidadfuente', models.TextField(choices=[('80Bronce', '80Bronce'), ('80Silver', '80Silver'), ('80Gold', '80Gold'), ('80Plat', '80Plat'), ('80Titanium', '80Titanium')], max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id_monitor', models.AutoField(primary_key=True, serialize=False)),
                ('urlcompra', models.URLField(max_length=100)),
                ('hz', models.TextField(max_length=4)),
                ('calidad_respuesta', models.DecimalField(decimal_places=5, max_digits=10)),
                ('curvo', models.BooleanField(default=False)),
                ('pantallafiltroplasma', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlacaBase',
            fields=[
                ('id_placabase', models.AutoField(primary_key=True, serialize=False)),
                ('urlcompra', models.URLField(max_length=100)),
                ('nombre', models.TextField(max_length=100)),
                ('familiaplacabase', models.TextField(choices=[('Ryzen', 'Ryzen'), ('Intel', 'Intel')], max_length=10)),
                ('vrm_placa', models.FloatField(max_length=10)),
                ('rgb', models.BooleanField(default=False)),
                ('hdds', models.ManyToManyField(related_name='placabas_hdds', to='tiendaordenadores.discodurohdd')),
                ('monitores', models.ManyToManyField(related_name='placabas_monitores', to='tiendaordenadores.monitor')),
            ],
        ),
        migrations.CreateModel(
            name='Procesador',
            fields=[
                ('id_procesador', models.AutoField(primary_key=True, serialize=False)),
                ('urlcompra', models.URLField(max_length=100)),
                ('nombre', models.TextField(max_length=100)),
                ('familiaprocesador', models.TextField(choices=[('Ryzen', 'Ryzen'), ('Intel', 'Intel')], max_length=6)),
                ('potenciacalculo', models.PositiveBigIntegerField()),
                ('nucleos', models.PositiveSmallIntegerField()),
                ('hilos', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(35000)])),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='procesadores/')),
                ('placabase', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.placabase')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Grafica',
            fields=[
                ('id_grafica', models.AutoField(primary_key=True, serialize=False)),
                ('urlcompra', models.URLField(max_length=100)),
                ('nombre', models.TextField(max_length=100)),
                ('familiagrafica', models.TextField(choices=[('AMD', 'AMD'), ('Nvidia', 'NVIDIA'), ('Intel', 'Intel')], max_length=6)),
                ('potenciacalculo', models.PositiveIntegerField()),
                ('memoriavram', models.PositiveIntegerField()),
                ('fecha_salida', models.DateTimeField(default=django.utils.timezone.now)),
                ('trazadorayos', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('placabase', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.placabase')),
                ('grafica_procesadores', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='procesadores_reverse', to='tiendaordenadores.procesador')),
            ],
        ),
        migrations.CreateModel(
            name='Ram',
            fields=[
                ('id_ram', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_fabricacion', models.DateField(default=django.utils.timezone.now)),
                ('mhz', models.CharField(max_length=10)),
                ('familiaram', models.TextField(choices=[('DDR3', 'Formato DDR3'), ('DDR4', 'Formato DDR4'), ('DDR5', 'Formato DDR5')])),
                ('rgb', models.BooleanField(default=True)),
                ('factormemoria', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='placabase',
            name='rams',
            field=models.ManyToManyField(related_name='placabas_rams', to='tiendaordenadores.ram'),
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.PositiveSmallIntegerField(choices=[(1, 'administrador'), (2, 'cliente'), (3, 'tecnicoinformatico'), (4, 'vendedor')], default=1)),
                ('groups', models.ManyToManyField(blank=True, related_name='usuario_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='usuario_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TecnicoInformatico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incidencias_resueltas', models.PositiveSmallIntegerField(db_column='incidenciasresueltas_tiendaordenadores', default=0)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wallet', models.FloatField(db_column='wallet_tiendaordenadores', default=0.0)),
                ('compras_realizadas', models.PositiveIntegerField(db_column='comprasrealizadas_tiendaordenadores', default=0)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Vendedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ventas_realizadas', models.PositiveIntegerField(db_column='ventasrealizadas_tiendaordenadores', default=0)),
                ('comision', models.FloatField(db_column='comision_tiendaordenadores', default=0.0)),
                ('region', models.CharField(db_column='region_tiendaordenadores', default='Europa/General', max_length=100)),
                ('marca', models.CharField(blank=True, db_column='marca_tiendaordenadores', max_length=100, null=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='MonitorGrafica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grafica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.grafica')),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.monitor')),
            ],
            options={
                'unique_together': {('monitor', 'grafica')},
            },
        ),
        migrations.CreateModel(
            name='PlacaBaseDisipador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disipador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.disipador')),
                ('placabase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.placabase')),
            ],
            options={
                'unique_together': {('placabase', 'disipador')},
            },
        ),
        migrations.CreateModel(
            name='GraficaProcesador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cuellodebotella', models.BooleanField(default=False)),
                ('grafica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.grafica')),
                ('procesador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.procesador')),
            ],
            options={
                'unique_together': {('grafica', 'procesador')},
            },
        ),
    ]
